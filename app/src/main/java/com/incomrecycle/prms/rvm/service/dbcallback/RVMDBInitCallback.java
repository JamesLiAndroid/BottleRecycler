package com.incomrecycle.prms.rvm.service.dbcallback;

import android.database.sqlite.SQLiteDatabase;
import com.incomrecycle.common.sqlite.DatabaseInitCallback;
import com.incomrecycle.common.sqlite.SQLiteExecutor;

public class RVMDBInitCallback implements DatabaseInitCallback {
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("CREATE TABLE RVM_SYS_CODE ( SYS_CODE_TYPE VARCHAR(60) NOT NULL,  SYS_CODE_KEY VARCHAR(60) NOT NULL,  SYS_CODE_VALUE VARCHAR(60) NULL,  PRIMARY KEY(SYS_CODE_TYPE,SYS_CODE_KEY) ) ");
        SQLiteExecutor.execSql(db, "INSERT INTO RVM_SYS_CODE(SYS_CODE_TYPE,SYS_CODE_KEY,SYS_CODE_VALUE) VALUES('RVM_INFO','STORAGE_MAX_VOL','400');INSERT INTO RVM_SYS_CODE(SYS_CODE_TYPE,SYS_CODE_KEY,SYS_CODE_VALUE) VALUES('RVM_INFO','STORAGE_CURR_VOL','0');INSERT INTO RVM_SYS_CODE(SYS_CODE_TYPE,SYS_CODE_KEY,SYS_CODE_VALUE) VALUES('RVM_INFO','STORAGE_CURR_PAPER_WEIGH','0') ");
        db.execSQL("CREATE TABLE RVM_OPT ( OPT_ID INTEGER NOT NULL,  OPT_TIME VARCHAR(20) NOT NULL,  OPT_TYPE VARCHAR(20) NOT NULL,  RVM_CODE VARCHAR(20) NOT NULL, PRODUCT_TYPE VARCHAR(20) NULL, PRODUCT_AMOUNT DECIMAL(15,2) NULL, CARD_TYPE VARCHAR(60) NULL, CARD_NO VARCHAR(60) NULL, PROFIT_AMOUNT DECIMAL(15,2) NOT NULL, VENDING_WAY VARCHAR(20) NULL, OPT_STATUS INTEGER NOT NULL, CHARGE_FLAG INTEGER NULL, CHARGE_TIME VARCHAR(20) NULL, CHARGE_FINISH_TIME VARCHAR(20) NULL, UNIQUE_CODE VARCHAR(20) NULL, PRIMARY KEY(OPT_ID) ) ");
        db.execSQL("CREATE TABLE RVM_OPT_VOUCHER ( OPT_ID INTEGER NOT NULL,  VOUCHER_CODE VARCHAR(60) NOT NULL, ACTIVITY_ID INTEGER NOT NULL, ACTIVITY_TYPE INTEGER NOT NULL, UPLOAD_FLAG INTEGER NOT NULL, PRIMARY KEY(OPT_ID,VOUCHER_CODE) ) ");
        db.execSQL("CREATE TABLE RVM_OPT_BOTTLE ( OPT_ID INTEGER NOT NULL,  BOTTLE_BAR_CODE VARCHAR(60) NOT NULL, BOTTLE_VOL DECIMAL(15,2) NOT NULL, BOTTLE_AMOUNT DECIMAL(15,2) NOT NULL, BOTTLE_COUNT INTEGER NOT NULL , PRIMARY KEY(OPT_ID,BOTTLE_BAR_CODE) ) ");
        db.execSQL("CREATE TABLE RVM_BAR_CODE ( BAR_CODE VARCHAR(60) NOT NULL, BAR_CODE_VOL DECIMAL(15,2) NOT NULL, BAR_CODE_FLAG INTEGER NOT NULL, BAR_CODE_ATTR_ID INTEGER NOT NULL,PRIMARY KEY(BAR_CODE) ) ");
        db.execSQL("CREATE TABLE RVM_BAR_CODE_ATTR_ID ( BAR_CODE_ATTR_ID INTEGER NOT NULL, BAR_CODE_VOL DECIMAL(15,2) NOT NULL, BAR_CODE_WEIGH DECIMAL(15,2) NOT NULL, BAR_CODE_COLOR VARCHAR(20) NOT NULL,BAR_CODE_STUFF VARCHAR(20) NOT NULL,BAR_CODE_PRICE DECIMAL(15,2) NULL,AREA_ID VARCHAR(20) NOT NULL,VERSION VARCHAR(20) NOT NULL, PRIMARY KEY(BAR_CODE_ATTR_ID) ) ");
        db.execSQL("CREATE TABLE RVM_BAR_CODE_UNKNOWN ( BAR_CODE VARCHAR(60) NOT NULL, UPLOAD_FLAG INTEGER NOT NULL, CREATE_TIME VARCHAR(20) NOT NULL, PRIMARY KEY(BAR_CODE) ) ");
        db.execSQL("CREATE TABLE RVM_ACTIVITY ( ACTIVITY_ID INTEGER NOT NULL, ACTIVITY_TYPE INTEGER NOT NULL, PRINT_RULE INTEGER NOT NULL, MIN_BOTTLE_COUNT INTEGER NOT NULL,NOT_ENOUGH INTEGER NOT NULL, APPLY_COUNT INTEGER NOT NULL, APPLY_TIME VARCHAR(20) NULL, PRINT_INFO VARCHAR(500) NULL, BEGIN_TIME VARCHAR(20) NULL, END_TIME VARCHAR(20) NULL, PIC_INFO VARCHAR(200) NULL, PIC_PATH VARCHAR(200) NULL, ACTIVITY_STATUS INTEGER NOT NULL, PRIMARY KEY(ACTIVITY_ID) ) ");
        db.execSQL("CREATE TABLE RVM_ACTIVITY_VOUCHER ( ACTIVITY_ID INTEGER NOT NULL, VOUCHER_CODE VARCHAR(60) NOT NULL, USED_TIME VARCHAR(20) NULL, PRIMARY KEY(ACTIVITY_ID,VOUCHER_CODE) ) ");
        db.execSQL("CREATE TABLE RVM_STAFF ( USER_ID INTEGER NOT NULL, USER_EXT_CODE VARCHAR(60) NULL,USER_LOGIN_NAME VARCHAR(60) NULL, USER_STAFF_ID NUMBER(20) NULL, USER_PASSWORD VARCHAR(128) NULL, USER_STATUS INTEGER NOT NULL,PRIMARY KEY(USER_ID) ) ");
        db.execSQL("CREATE TABLE RVM_MEDIA ( MEDIA_ID INTEGER NOT NULL, MEDIA_URL VARCHAR(200) NULL, MEDIA_TYPE INTEGER NOT NULL, FILE_PATH VARCHAR(200) NOT NULL, DOWNLOAD_FLAG INTEGER NOT NULL, MEDIA_PLAY_LOCAL VARCHAR(60) ,MEDIA_PRIORITY INTEGER ,PRIMARY KEY(MEDIA_ID) ) ");
        db.execSQL("CREATE TABLE RVM_ALARM ( ALARM_ID INTEGER NOT NULL, TSD_TYPE INTEGER NOT NULL, TSD_VALUE DECIMAL(15,2) NOT NULL, AM_LEVEL INTEGER NULL, PRIMARY KEY(ALARM_ID) ) ");
        db.execSQL("CREATE TABLE RVM_ALARM_INST ( ALARM_INST_ID INTEGER NOT NULL, ALARM_TYPE INTEGER NOT NULL,ALARM_TIME VARCHAR(20) NULL, ALARM_ID INTEGER NOT NULL, UPLOAD_FLAG INTEGER NOT NULL, ALARM_STATUS INTEGER NULL, USER_STAFF_ID NUMBER(20) NULL, START_OPER_DATE VARCHAR(20) NULL, PRIMARY KEY(ALARM_INST_ID, ALARM_TYPE) ) ");
        db.execSQL("CREATE TABLE RVM_OPT_SUMMARY(OPT_SUMMARY_ID INTEGER NOT NULL,PRODUCT_TYPE VARCHAR(20) NOT NULL,VENDING_TIME VARCHAR(20) NOT NULL,OP_BATCH_ID VARCHAR(60) NOT NULL,RECYCLE_QUANTITY DECIMAL(15,2) NOT NULL,SUM_MONEY DECIMAL(15,2) NOT NULL,SEND_TIME VARCHAR(20) NULL,UPLOAD_FLAG INTEGER NOT NULL,PRIMARY KEY(OPT_SUMMARY_ID,PRODUCT_TYPE))");
        db.execSQL("CREATE TABLE RVM_TXT_AD(SBAR_ID INTEGER NOT NULL,SBAR_TEXT VARCHAR(2000) NOT NULL,BEGIN_TIME VARCHAR(20) NULL,END_TIME VARCHAR(20) NULL,BACK_TEXT VARCHAR(2000) NULL,PRIMARY KEY(SBAR_ID))");
        db.execSQL("CREATE TABLE RVM_PAPER_PRICE(PAPER_WEIGH DECIMAL(15,2) NOT NULL,PAPER_PRICE DECIMAL(15,2) NOT NULL,AREA_ID VARCHAR(20) NOT NULL,PRIMARY KEY(PAPER_WEIGH,PAPER_PRICE))");
        db.execSQL("CREATE TABLE RVM_RECHARGE(CARD_NO VARCHAR(60) NOT NULL,CARD_TYPE INTEGER NOT NULL,RECHARGE_STATE INTEGER NOT NULL,RECHARGE_TIME VARCHAR(20) NULL,ORDER_ID VARCHAR(60) NULL,PRIMARY KEY(CARD_NO))");
        db.execSQL("CREATE TABLE IF NOT EXISTS RVM_HANDLED_FILE ( FILE_NAME VARCHAR(500) NOT NULL, FILE_TIME VARCHAR(32) NOT NULL, PRIMARY KEY(FILE_NAME) ) ");
        db.execSQL("CREATE TABLE RVM_BAR_CODE_PRICE ( BAR_CODE_PRICE_KEY VARCHAR(128) NOT NULL, BAR_CODE_VOL VARCHAR(60), BAR_CODE_AMOUNT DECIMAL(15,2) NOT NULL, BAR_CODE_STUFF VARCHAR(20) NOT NULL,AREA_ID VARCHAR(20) NOT NULL,BAR_CODE_WEIGH VARCHAR(60) NOT NULL,BAR_CODE_COLOR VARCHAR(20) NOT NULL,VERSION VARCHAR(20) NOT NULL,BAR_CODE_PRICE_PRIORITY DECIMAL(8) NOT NULL,PRIMARY KEY(BAR_CODE_PRICE_KEY) ) ");
        SQLiteExecutor.execSql(db, "INSERT INTO RVM_STAFF(USER_ID,USER_EXT_CODE,USER_LOGIN_NAME,USER_STAFF_ID,USER_PASSWORD,USER_STATUS) VALUES(0,null,'123',0,'caf1a3dfb505ffed0d024130f58c5cfa',1) ");
        SQLiteExecutor.execSql(db, "INSERT INTO RVM_BAR_CODE ( BAR_CODE, BAR_CODE_VOL, BAR_CODE_FLAG, BAR_CODE_ATTR_ID) VALUES('11111111',0,0,0)");
        SQLiteExecutor.execSql(db, "INSERT INTO RVM_BAR_CODE_ATTR_ID ( BAR_CODE_ATTR_ID, BAR_CODE_VOL, BAR_CODE_WEIGH, BAR_CODE_COLOR,BAR_CODE_STUFF,BAR_CODE_PRICE,AREA_ID,VERSION) VALUES(0, 0, 0, 'NONE',0,0,'1','0')");
    }

    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        for (int v = oldVersion; v < newVersion; v++) {
            if (v == 1) {
            }
            if (v == 2) {
            }
            if (v == 3) {
            }
            if (v == 4) {
                db.execSQL("ALTER TABLE 'RVM_ACTIVITY' ADD 'ACTIVITY_NAME' VARCHAR(200) NULL");
            }
            if (v == 5) {
                db.execSQL("CREATE TABLE RVM_YOUKU_MOVIE_TICKET ( OPT_ID INTEGER NOT NULL, CARD_TYPE VARCHAR(60), CARD_NO VARCHAR(60), OPT_TIME VARCHAR(20), UPLOAD_FLAG INTEGER ) ");
            }
            if (v == 6) {
                db.execSQL("ALTER TABLE 'RVM_STAFF' ADD 'USER_PERMISSION' INTEGER NULL");
                db.execSQL("UPDATE RVM_STAFF SET USER_PERMISSION = '1' WHERE USER_ID = 0");
            }
            if (v == 7) {
                db.execSQL("CREATE TABLE RVM_WORKER_SIGN_IN ( USER_ID INTEGER NOT NULL, USER_STAFF_NAME VARCHAR(60), USER_STAFF_ID NUMBER(20), SIGN_IN_TIME VARCHAR(20), LOGIN_TYPE INTEGER, UPLOAD_FLAG INTEGER ) ");
            }
            if (v == 8) {
                db.execSQL("CREATE TABLE RVM_CHECK_DATABASE ( CHECK_ID INTEGER NOT NULL, CHECK_NAME VARCHAR(60), CHECK_TIME VARCHAR(20) ) ");
            }
            if (v == 9) {
                db.execSQL("CREATE TABLE RVM_MAINTAIN_UPDATE ( OPT_ID INTEGER NOT NULL, OP_BATCH_ID VARCHAR(60), LOGIN_TIME VARCHAR(20), STAFF_ID NUMBER(20), LOGIN_TYPE INTEGER, OPT_CONTENT VARCHAR(1024), UPLOAD_FLAG INTEGER ) ");
            }
            if (v == 10) {
                db.execSQL("ALTER TABLE 'RVM_OPT_BOTTLE' ADD 'VENDING_BOTTLE_COUNT' INTEGER NULL");
                db.execSQL("UPDATE RVM_OPT_BOTTLE SET VENDING_BOTTLE_COUNT = BOTTLE_COUNT");
            }
            if (v == 11) {
                db.execSQL("ALTER TABLE 'RVM_YOUKU_MOVIE_TICKET' ADD 'SELECT_FLAG' VARCHAR(60) NULL");
                db.execSQL("CREATE TABLE RVM_DATE_COUNT (OP_BATCH_ID VARCHAR(60) NOT NULL ,SUM_TIME INTEGER PRIMARY KEY,UP_TIME VARCHAR(20),CLICK_SUM VARCHAR(2000),UPLOAD_FLAG INTEGER)");
                db.execSQL("ALTER TABLE 'RVM_OPT' ADD 'SELECT_FLAG' VARCHAR(60) NULL");
                db.execSQL("CREATE TABLE RVM_PRICE_MAP (VENDING_WAY VARCHAR(20) NOT NULL, PRODUCT_TYPE VARCHAR(20) NOT NULL, PRICE_MAP VARCHAR(60), PRIMARY KEY(VENDING_WAY, PRODUCT_TYPE))");
            }
            if (v == 12) {
                db.execSQL("CREATE TABLE RVM_RECHARGE_FEEDBACK (POS_COMM_SEQ VARCHAR(30) NOT NULL, UID_REC VARCHAR(30) NOT NULL, ISAM VARCHAR(30), CARD_NO VARCHAR(20) NOT NULL, CHARGE_TIME VARCHAR(20), CHARGE_AMOUNT DECIMAL(15,2), BEGIN_MONEY INTEGER, END_MONEY INTEGER, CHARGE_STATUS INTEGER, UPLOAD_FLAG INTEGER, PRIMARY KEY (UID_REC))");
                db.execSQL("CREATE TABLE RVM_BMCHARGE_FEEDBACK (POS_COMM_SEQ VARCHAR(30) NOT NULL, UID_REC VARCHAR(30) NOT NULL, ISAM VARCHAR(30) NOT NULL, CARD_NO VARCHAR(20) NOT NULL, BUSINESS_TYPE INTEGER NOT NULL, BUSINESS_NO VARCHAR(20) NOT NULL, CHARGE_TIME VARCHAR(20), CHARGE_AMOUNT DECIMAL(15,2), BEGIN_MONEY INTEGER, END_MONEY INTEGER, UPLOAD_FLAG INTEGER, PRIMARY KEY (UID_REC))");
            }
            if (v == 13) {
                db.execSQL("ALTER TABLE RVM_BAR_CODE ADD BAR_CODE_WEIGH DECIMAL(15,2) NULL");
                db.execSQL("ALTER TABLE RVM_BAR_CODE ADD BAR_CODE_COLOR VARCHAR(20) NULL");
                db.execSQL("ALTER TABLE RVM_BAR_CODE ADD BAR_CODE_STUFF VARCHAR(20) NULL");
                db.execSQL("update RVM_BAR_CODE set BAR_CODE_WEIGH=(select BAR_CODE_WEIGH from RVM_BAR_CODE_ATTR_ID a where a.BAR_CODE_ATTR_ID=RVM_BAR_CODE.BAR_CODE_ATTR_ID) ,BAR_CODE_COLOR=(select BAR_CODE_COLOR from RVM_BAR_CODE_ATTR_ID a where a.BAR_CODE_ATTR_ID=RVM_BAR_CODE.BAR_CODE_ATTR_ID) ,BAR_CODE_STUFF=(select BAR_CODE_STUFF from RVM_BAR_CODE_ATTR_ID a where a.BAR_CODE_ATTR_ID=RVM_BAR_CODE.BAR_CODE_ATTR_ID) where exists(select BAR_CODE_STUFF from RVM_BAR_CODE_ATTR_ID a where a.BAR_CODE_ATTR_ID=RVM_BAR_CODE.BAR_CODE_ATTR_ID)");
                db.execSQL("DROP TABLE IF EXISTS RVM_BAR_CODE_IMPORT");
            }
        }
    }
}
